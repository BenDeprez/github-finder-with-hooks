{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/github/githubContext.js","context/alert/alertContext.js","components/users/Search.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/pages/Home.js","components/repos/RepoItem.js","context/github/GithubState.js","components/repos/Repos.js","components/users/User.js","components/pages/NotFound.js","components/layout/Alert.js","components/pages/About.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","props","className","to","icon","title","defaultProps","GithubContext","createContext","AlertContext","Search","githubContext","useContext","alertContext","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","type","name","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","user","avatar_url","login","src","alt","style","width","Spinner","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","loading","map","key","id","Home","RepoItem","repo","href","html_url","propType","PropTypes","object","isRequired","githubClientID","githubClientSecret","Repos","repos","User","match","getUser","getRepos","useEffect","params","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","NotFound","Alert","alert","message","About","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","useReducer","githubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.466d97ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.d6156cc6.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <Link to='/'>\r\n        <h1>\r\n          <i className={props.icon} /> {props.title}\r\n          {/* this=Navbar, prop=icon, title */}\r\n        </h1>\r\n      </Link>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Finder',\r\n  icon: 'fa fa-github'\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from 'react';\r\n\r\nconst GithubContext = createContext();\r\n\r\nexport default GithubContext;\r\n","import { createContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  // text state\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('please enter a name', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          placeholder='Search users...'\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className='btn btn-light btn-block'\r\n          onClick={githubContext.clearUsers}>\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = props => {\r\n  const { avatar_url, login } = props.user;\r\n\r\n  return (\r\n    <div>\r\n      <div className='card text-center'>\r\n        <img\r\n          src={avatar_url}\r\n          alt='avatar'\r\n          className='round-img'\r\n          style={{ width: '60px' }}\r\n        />\r\n        <h3>{login}</h3>\r\n        <Link to={`/user/${login}`} className='btn btn-success btn-sm my-1'>\r\n          more\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        alt='\"Loading...\"'\r\n        style={{ width: '50px', margin: 'auto', display: 'block' }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { loading, users } = githubContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => (\r\n  <Fragment>\r\n    <Search />\r\n    <Users />\r\n  </Fragment>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className='card'>\r\n      <h3>\r\n        <a className='text-dark' href={repo.html_url}>\r\n          {repo.name}\r\n        </a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoItem.propType = {\r\n  repo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default RepoItem;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport githubReducer from './githubReducer';\r\n\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  CLEAR_USERS\r\n} from '../types';\r\n\r\nlet githubClientID;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientID = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientID = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\n// initialize state\r\n///////////////////\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  // search user\r\n  // Search all Github users matching name entered in text field\r\n  //////////////////////////////////////////////////////////////\r\n\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientID}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    });\r\n  };\r\n\r\n  // get user\r\n  // Get single Github user when 'More' button is clicked, username = login\r\n  /////////////////////////////////////////////////////////////////////////\r\n\r\n  const getUser = async username => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${githubClientID}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Get repos\r\n  ////////////\r\n\r\n  const getRepos = async username => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc?client_id=${githubClientID}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Clear users from state\r\n  /////////////////////////\r\n\r\n  const clearUsers = () => {\r\n    dispatch({\r\n      type: CLEAR_USERS\r\n    });\r\n  };\r\n\r\n  // set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    // wraps the entire application in a provider\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        getUser,\r\n        getRepos,\r\n        clearUsers\r\n      }}>\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import React from 'react';\r\nimport RepoItem from './RepoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Repos;\r\n","import React, { useEffect, useContext, Fragment } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { user, loading, getUser, getRepos, repos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n    company\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back\r\n      </Link>\r\n\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            className='round-img'\r\n            alt='avatar'\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n\r\n          <p>Location: {location}</p>\r\n          <p>\r\n            Hirable :{' '}\r\n            {hireable ? (\r\n              <i className='fa fa-check text-success' />\r\n            ) : (\r\n              <i className='fa fa-times-circle text-danger' />\r\n            )}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <br />\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <a href={html_url} className='btn btn-success my-1'>\r\n              Github\r\n            </a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='card text-center'>\r\n        <div className='badge badge-dark'>Followers: {followers}</div>\r\n        <div className='badge badge-dark'>Following: {following}</div>\r\n        <div className='badge badge-dark'>Public Repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nexport const NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n      <p className='lead'>The page you are looking for does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fa fa-info-circle' /> {alert.message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About this app</h1>\r\n      <p>App to search Github users</p>\r\n      <p>Version 1.0.0</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  CLEAR_USERS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\n// initialize state\r\n///////////////////\r\n\r\nconst AlertState = props => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (message, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { message, type }\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n  };\r\n\r\n  return (\r\n    // wraps the entire application in a provider\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert\r\n      }}>\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","// Imports\r\n//////////\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/Home';\r\nimport User from './components/users/User';\r\nimport NotFound from './components/pages/NotFound';\r\nimport Alert from './components/layout/Alert';\r\nimport About from './components/pages/About';\r\nimport GithubState from './context/github/GithubState';\r\nimport AlertState from './context/alert/AlertState';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <Router>\r\n          <div className='App'>\r\n            <Navbar />\r\n            <div className='container'>\r\n              <Alert />\r\n\r\n              {/* We want to wrap all the routes in a switch so it shows one route at a time. */}\r\n              {/* router > App > container > switch > route > render > fragment > component  */}\r\n              <Switch>\r\n                {/* Home route */}\r\n                <Route exact path='/' component={Home} />\r\n                {/* About route */}\r\n                <Route exact path='/about' component={About} />\r\n                {/* Single User route*/}\r\n                <Route exact path='/user/:login' component={User} />\r\n                {/* NotFound User route*/}\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}